buildscript {
    repositories {
        // need to get up to the working directory of gradle-plugins build
        flatDir dir: "${project.projectDir}/../../../../build/libs"
        jcenter()
    }

    dependencies {
        classpath name: "gradle-ensime", version: "+"
        classpath "com.github.maiflai:gradle-scalatest:0.6-5-g9065d91"
    }
}

apply plugin: "scala"
apply plugin: "com.github.maiflai.scalatest"
apply plugin: "ensime"

ext {
    scalaLibraryVersion = "2.11.4"
    // NOTE: Please make this point to the scala src zip (download from
    // https://github.com/scala/scala/archive/v2.11.4.tar.gz and repackage
    // as zip)
    scalaSourceZip = "/Downloads/scala-${scalaLibraryVersion}-src.zip"
}

ensime {
    targetFile = "${project.buildDir}/ensime_file"
    cacheDir = "${project.buildDir}/ensime_cache"
    javaHome = "/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home"
    javaFlags = ["-Xms1024m", "-Xmx1024m", "-XX:MaxPermSize=256m"]
    referenceSourceRoots = [javaHome + "/src.zip", scalaSourceZip]
    scalaVersion = scalaLibraryVersion
    compilerArgs = ["-feature", "-deprecation"]
}

repositories {
    mavenCentral()
}

sourceSets {
    common.java.srcDirs = ["src/common/java"]
    common.scala.srcDirs = ["src/common/scala"]
    main.compileClasspath += common.output
    main.runtimeClasspath += common.output
    test.compileClasspath += common.output
    test.runtimeClasspath += common.output
}

compileScala.dependsOn(compileCommonJava)
compileScala.dependsOn(compileCommonScala)

dependencies {
    commonCompile "org.scala-lang:scala-library:${scalaLibraryVersion}"
    compile configurations.commonCompile

    testCompile "junit:junit:4.+"
    testCompile "org.scalatest:scalatest_2.11:2.2.3"
    testCompile "org.pegdown:pegdown:1.4.2"
}

jar {
  manifest.attributes(
    "Main-Class": "HelloScala",
    "Class-Path": configurations.compile.collect { it.getAbsolutePath() }.join(" ")
  )
  from(sourceSets.main.output.classesDir)
  from(sourceSets.common.output.classesDir)
}

task debugme << {
  sourceSets.each {
    println("sourceSet.name = " + it.name)
    println(">> output.classesDir = " + it.output.classesDir)
    println(">> output.resourcesDir = " + it.output.resourcesDir)
    println(">> compileClasspath = " + it.compileClasspath.asPath)
    println(">> runtimeClasspath = " + it.runtimeClasspath.asPath)
    println("-----------")
  }

  configurations.each {
    println("configuration.name = " + it.name)
    println("configuration.resolve = " + it.resolve())
    it.allArtifacts.getFiles().each {
      println(">> artifact.getAbsolutePath = " + it.getAbsolutePath())
    }
    it.allDependencies.each {
      println(">> dep.name = " + it.getName())
    }
    it.hierarchy.each {
      println(">> configuration.name = " + it.name)
    }
    it.incoming.each {
      println(">> incoming.name = " + it.getName())
    }
  }
}
