plugins {
    id 'groovy'
    id 'java-gradle-plugin'
    id 'signing'
    id 'maven-publish'
    id 'com.jfrog.artifactory' version '4.0.0'
    id 'com.jfrog.bintray' version '1.5'
}

group = 'net.coacoas.gradle'
archivesBaseName = 'ensime-gradle'

ext {
  projectUrl = 'https://github.com/ensime/ensime-gradle'
  bintrayUser = propOrEnv('BINTRAY_USER')
  bintrayPassword = propOrEnv('BINTRAY_API_KEY')
  bintrayRepo = propOrEnv('BINTRAY_REPO')
}

repositories {  
  mavenCentral() 
}

// Write the plugin's classpath to a file to share with the tests
task createClasspathManifest  {
  def outputDir = file("$buildDir/$name")

  inputs.files sourceSets.main.runtimeClasspath
  outputs.dir outputDir

  doLast {
    outputDir.mkdirs()
    file("$outputDir/plugin-classpath.txt").text = sourceSets.main.runtimeClasspath.join("\n")
  }
}

dependencies {
  compile gradleApi()
  compile localGroovy()

  testCompile gradleTestKit()
  testCompile ("org.spockframework:spock-core:1.0-groovy-2.4") { 
    exclude module: 'groovy-all'
  }

  testRuntime files(createClasspathManifest)
}

signing {
  sign configurations.archives
}

publishing {
  publications { 
    mavenJava(MavenPublication) { 
      from components.java 
      artifact sourcesJar
      artifact javadocJar
      pom.withXml {
        asNode().children().last() + {
          resolveStrategy = Closure.DELEGATE_FIRST
          name archivesBaseName
          description 'Gradle-ENSIME is a Gradle plugin for creating ENSIME configuration files for Gradle Projects'
          url projectUrl
    
          scm {
            url projectUrl
            connection projectUrl
            developerConnection projectUrl
          }
  
          licenses {
            license {
              name 'The Apache Software License, Version 2.0'
              url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
              distribution 'repo'
            }
          }

          developers {
            developer {
              id 'coacoas'
              name 'Bill Carlson'
              email 'bill@coacoas.net'
            }
          }
        }
      }
    }
  }
}

bintray { 
  user = bintrayUser
  key = bintrayPassword
  pkg { 
    repo = bintrayRepo
    name = archivesBaseName
    version = version
  }
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
  classifier = 'groovydoc'
  from groovydoc.destinationDir
}

tasks.withType(JavaCompile) {
  targetCompatibility = '1.6'
  sourceCompatibility = '1.6'
}

artifacts {
  archives jar
  archives sourcesJar
  archives javadocJar
  archives groovydocJar
}

test {
  dependsOn jar
}

artifactory { 
  contextUrl = 'http://oss.jfrog.org/artifactory'
  publish {
    repository { 
      repoKey = version.endsWith('-SNAPSHOT') ? 'oss-snapshot-local' : 'oss-release-local'
      username = bintrayUser
      password = bintrayPassword
    }
    defaults { 
      publications('mavenJava')
      publishArtifacts = true
    }
  }
}

def propOrEnv(key, defaultValue = '') {
  hasProperty(key) ? property(key) : (System.env[key] ?: defaultValue)
}

task deploy {
  dependsOn(version.endsWith('-SNAPSHOT') ? artifactoryPublish : bintrayPublish)
}


