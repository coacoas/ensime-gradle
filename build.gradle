buildscript { 
  repositories { 
    mavenCentral()
  }
  dependencies {
    classpath 'com.github.townsfolk:gradle-release:1.2'
  }
}

apply plugin: 'java-gradle-plugin'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'release'

group = 'net.coacoas.gradle'
archivesBaseName = 'ensime-gradle'

repositories {  
  mavenCentral() 
}

// Write the plugin's classpath to a file to share with the tests
task createClasspathManifest {
  def outputDir = file("$buildDir/$name")

  inputs.files sourceSets.main.runtimeClasspath
  outputs.dir outputDir

  doLast {
    outputDir.mkdirs()
    file("$outputDir/plugin-classpath.txt").text = sourceSets.main.runtimeClasspath.join("\n")
  }
}

dependencies {
  testCompile gradleTestKit()
  testCompile "org.spockframework:spock-core:1.0-groovy-2.3"

  testRuntime files(createClasspathManifest)
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
  classifier = 'groovydoc'
  from groovydoc.destinationDir
}

tasks.withType(JavaCompile) {
  targetCompatibility = '1.6'
  sourceCompatibility = '1.6'
}

artifacts {
  archives jar
  archives sourcesJar
  archives javadocJar
  archives groovydocJar
}

test {
  dependsOn jar
}

signing {
  required { gradle.taskGraph.hasTask("uploadArchives") }
  sign configurations.archives
}

def sonatypeURL() {
  version.endsWith('SNAPSHOT') ? 
    'https://oss.sonatype.org/content/repositories/snapshots/' :
    'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
}

uploadArchives.doFirst { 
  repositories.mavenDeployer.repository(url: sonatypeURL()) { 
    authentication(userName: sonatypeUsername, 
    password: sonatypePassword)
  }
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> 
        signing.signPom(deployment) 
      }

      pom.project {
        name 'gradle-ensime'
        packaging 'jar'
        description 'Gradle-ENSIME is a Gradle plugin for creating ENSIME configuration files for Gradle Projects'
        url 'http://www.github.com/coacoas/gradle-ensime'

        scm {
          url 'scm:git:http://www.github.com/coacoas/gradle-ensime'
          connection 'scm:git:git://github.com/coacoas/gradle-ensime.git'
          developerConnection 'scm:git:git://github.com:coacoas/gradle-ensime.git'
        }

        licenses {
          license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution 'repo'
          }
        }

        developers {
          developer {
            id 'coacoas'
            name 'Bill Carlson'
          }
        }
      }
    }
  }
}

createReleaseTag.dependsOn uploadArchives

